---
import { formatDate } from '../utils/date';
import { getPath } from '../utils/path';

interface Props {
    title: string;
    description: string;
    pubDate: Date;
    hero: {
        image: string;
        alt: string;
    };
    author: {
        name: string;
        avatar?: string;
    };
    categories: string[];
    slug: string;
    readingTime?: number;
}

const { title, description, pubDate, hero, author, categories, slug, readingTime } = Astro.props;
---

<article class="flex flex-col bg-white theme-dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
    <a href={getPath(`blog/${slug}`)} class="relative aspect-video">
        <img
            src={getPath(hero.image)}
            alt={hero.alt}
            class="object-cover w-full h-full"
        />
    </a>
    <div class="p-6 flex flex-col flex-1">
        <div class="flex-1">
            <div class="flex gap-2 mb-3">
                {categories.map(category => (
                    <a
                        href={getPath(`categories/${category.toLowerCase()}`)}
                        class="text-xs px-2 py-1 bg-gray-100 theme-dark:bg-gray-700 text-gray-600 theme-dark:text-gray-300 rounded-full hover:bg-gray-200 theme-dark:hover:bg-gray-600"
                    >
                        {category}
                    </a>
                ))}
            </div>
            <a href={getPath(`blog/${slug}`)}>
                <h2 class="text-xl font-bold mb-2 text-gray-900 theme-dark:text-white hover:text-blue-600 theme-dark:hover:text-blue-400">{title}</h2>
            </a>
            <p class="text-gray-600 theme-dark:text-gray-300 mb-4 line-clamp-2">{description}</p>
        </div>
        
        <div class="flex items-center justify-between text-sm text-gray-500 theme-dark:text-gray-400">
            <div class="flex items-center gap-2">
                {author.avatar && (
                    <img
                        src={getPath(author.avatar)}
                        alt={author.name}
                        class="w-6 h-6 rounded-full"
                    />
                )}
                <span>{author.name}</span>
            </div>
            <div class="flex items-center gap-2">
                <time datetime={pubDate.toISOString()}>{formatDate(pubDate)}</time>
                {readingTime && (
                    <>
                        <span>â€¢</span>
                        <span>{readingTime} min read</span>
                    </>
                )}
            </div>
        </div>
    </div>
</article>